services:
  - type: web
    name: optimized-website-analyzer
    runtime: docker
    plan: standard  # Upgraded from starter for better performance (512MB â†’ 1GB RAM)
    region: frankfurt
    branch: main
    dockerfilePath: ./Dockerfile
    dockerContext: ./
    
    # Optimized scaling for sequential scans
    scaling:
      minInstances: 1
      maxInstances: 2  # Auto-scale for high demand
      targetCPUPercent: 70  # Scale up when CPU > 70%
      targetMemoryPercent: 80  # Scale up when Memory > 80%
    
    # Environment variables for optimization
    envVars:
      - key: PYTHONPATH
        value: /app
      - key: ENVIRONMENT
        value: production
      - key: API_VERSION
        value: "4.1.0"
      - key: MAX_WORKERS
        value: "2"  # Increased from 1 for better concurrency
      - key: TIMEOUT_SECONDS
        value: "180"  # Reduced from 300 for faster failures
      - key: PLAYWRIGHT_BROWSERS_PATH
        value: /ms-playwright
      
      # Memory optimization settings
      - key: MALLOC_TRIM_THRESHOLD
        value: "100000"
      - key: MALLOC_MMAP_THRESHOLD
        value: "100000"
      
      # Python optimizations
      - key: PYTHONDONTWRITEBYTECODE
        value: "1"
      - key: PYTHONUNBUFFERED
        value: "1"
        
      # Google API Keys - ADD THESE VIA RENDER DASHBOARD
      # - key: PSI_API_KEY
      #   value: YOUR_PAGESPEED_INSIGHTS_API_KEY
      # - key: CRUX_API_KEY  
      #   value: YOUR_CHROME_UX_REPORT_API_KEY
    
    # Optimized health check
    healthCheckPath: /health
    
    # Auto-deploy settings
    autoDeploy: true
    
    # Build optimization settings
    buildFilter:
      paths:
      - main.py
      - requirements.txt
      - Dockerfile
      - render.yaml
      
    # Optimized build command
    buildCommand: echo "Using Docker build - no additional build needed"

# Optional Redis cache for better caching (requires standard+ plan)
# Uncomment if you want distributed caching across instances
# - type: redis
#   name: analyzer-cache
#   plan: starter
#   maxmemoryPolicy: allkeys-lru
#   evictionPolicy: allkeys-lru
#   envVars:
#     - key: REDIS_MAXMEMORY
#       value: "64mb"
